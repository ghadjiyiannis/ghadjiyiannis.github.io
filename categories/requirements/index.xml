<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Requirements on George Hadjiyiannis</title>
    <link>https://ghadjiyiannis.github.io/categories/requirements/</link>
    <description>Recent content in Requirements on George Hadjiyiannis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 02 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ghadjiyiannis.github.io/categories/requirements/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Software is hard - Part 2: Implicit Requirements</title>
      <link>https://ghadjiyiannis.github.io/blog/software_is_hard_implicit_requirements/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ghadjiyiannis.github.io/blog/software_is_hard_implicit_requirements/</guid>
      <description>Every professional in the software industry knows that building software is a highly unpredictable business. This is why we don&amp;rsquo;t like the question of &amp;ldquo;How long is it going to take?&amp;rdquo;. The thing that always puzzled me, however, is that that unpredictability always seems to point in the wrong direction: software seems to almost always take longer to build than expected. With practically any other process, one would expect something similar to a normal (binomial) distribution around the expected estimate.</description>
    </item>
    
  </channel>
</rss>