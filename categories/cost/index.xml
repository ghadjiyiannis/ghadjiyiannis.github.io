<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cost on George Hadjiyiannis</title>
    <link>https://ghadjiyiannis.github.io/categories/cost/</link>
    <description>Recent content in Cost on George Hadjiyiannis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 07 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ghadjiyiannis.github.io/categories/cost/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Untyped vs. strongly typed languages</title>
      <link>https://ghadjiyiannis.github.io/blog/typed_vs_untyped_languages/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ghadjiyiannis.github.io/blog/typed_vs_untyped_languages/</guid>
      <description>In a previous article I explained why I generally do not think it is worth debating the relative merits of one computer language over another, while at the same time pointing out one major exception: whether the language in question is untyped vs. strongly typed. Unlike the other properties of a language, I believe its ability to guarantee the type of each variable in the code base is extremely important in the lifetime cost of software written in that language.</description>
    </item>
    
    <item>
      <title>How to (really) build customer centric products</title>
      <link>https://ghadjiyiannis.github.io/blog/how_to_really_build_customer_centric_products/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ghadjiyiannis.github.io/blog/how_to_really_build_customer_centric_products/</guid>
      <description>Customer centricity is another one of those points that is constantly talked about but often rarely actually reasoned about. As a result, most of the discussion out there is usually trivial and essentially consists of the equivalent of &amp;ldquo;Go ask what the customer wants, then go build it&amp;rdquo;. I would respectfully offer the opinion that that is not customer centricity, but rather, customer servitude! There are three fundamental mistakes in the idea of &amp;ldquo;Go ask what the customer wants, then go build it&amp;rdquo;, and I want to examine all of them critically to dispel the trivial hype around the topic.</description>
    </item>
    
    <item>
      <title>Understanding the cost of software</title>
      <link>https://ghadjiyiannis.github.io/blog/understanding_the_cost_of_software/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ghadjiyiannis.github.io/blog/understanding_the_cost_of_software/</guid>
      <description>The standard clich√© in our industry is that software projects always take twice as long, and cost twice as much. Of the two factors, however, it&amp;rsquo;s the financial one that does the most damage. Usually, timing does little damage in itself, other than making a company run out of money.
Without exaggeration, none of the companies I have worked with had a good understanding of how much a proposed software project would cost.</description>
    </item>
    
  </channel>
</rss>